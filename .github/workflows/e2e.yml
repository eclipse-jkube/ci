name: JKube E2E Tests

on:
  repository_dispatch:
    types: [pull_request]
env:
  ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
  JKUBE_IT_REPOSITORY: https://github.com/jkubeio/jkube-integration-tests.git
  JKUBE_IT_REVISION: main
  JKUBE_IT_DIR: jkube-integration-tests

jobs:
  bootstrap-CI-test-run:
    name: Bootstrap CI test run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
      - name: NPM install
        run: npm install
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Cache .m2 and JKube
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/jkube
            ~/.m2/repository
          key: cache-e2e-bootstrap-${{ github.run_id }}
      - name: Bootstrap
        run: |
          node src/index.js init                               \
            --pr=${{ github.event.client_payload.pr }}         \
            --jobId=${{ github.job }}                          \
            --runId=${{ github.run_id }}

  minikube:
    name: K8S
    needs: bootstrap-CI-test-run
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [v1.20.1,v1.12.0]
#        suite: ['quarkus','quarkus-native','springboot','webapp','other','dockerfile']
        suite: ['quarkus','quarkus-native','springboot']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore cache .m2 and JKube
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/jkube
            ~/.m2/repository
          key: cache-e2e-bootstrap-${{ github.run_id }}
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Update PR report status
        run: |
          node src/index.js update-status                      \
            --pr=${{ github.event.client_payload.pr }}         \
            --jobId=${{ github.job }}                          \
            --runId=${{ github.run_id }}
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.3.1
        with:
          minikube version: v1.18.0
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: --force
      - name: Checkout JKube Integration Tests Repository
        run: |
          git clone "$JKUBE_IT_REPOSITORY" \
          && cd $JKUBE_IT_DIR \
          && git checkout "$JKUBE_IT_REVISION"
      - name: Install and Run Integration Tests
        run: |
          JKUBE_VERSION=$(mvn -f jkube/pom.xml -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) \
          && cd $JKUBE_IT_DIR \
          && ./mvnw -B -PKubernetes,${{ matrix.suite }} verify -Djkube.version="$JKUBE_VERSION"
      - name: Consolidate reports
        if: always()
        run: |
          mkdir -p ./reports \
          && cp ./$JKUBE_IT_DIR/it/target/jkube-test-report.txt ./reports
      - name: Save reports as artifact
        if: always()
        uses: actions/upload-artifact@master
        with:
          name: Test reports (Minikube ${{ matrix.kubernetes }}-${{ matrix.suite }})
          path: ./reports
      - name: Update PR report status
        if: always()
        run: |
          node src/index.js update-status                      \
            --pr=${{ github.event.client_payload.pr }}         \
            --jobId=${{ github.job }}                          \
            --runId=${{ github.run_id }}

  teardown:
    name: Finish CI test run
    runs-on: ubuntu-latest
    needs: [minikube]
    if: always()
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Restore cache .m2 and JKube
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/node_modules
            ${{ github.workspace }}/jkube
            ~/.m2/repository
          key: cache-e2e-bootstrap-${{ github.run_id }}
      - name: Update PR report status
        run: |
          node src/index.js finish                             \
            --pr=${{ github.event.client_payload.pr }}         \
            --jobId=${{ github.job }}                          \
            --runId=${{ github.run_id }}